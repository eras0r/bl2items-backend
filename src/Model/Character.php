<?php

namespace Bl2\Model;

use Doctrine\ORM\Mapping as ORM;
use JMS\Serializer\Annotation as Serializer;

/**
 * Entity object representing a character.
 * @ORM\Entity
 * @ORM\Table(name="`character`", uniqueConstraints={@ORM\UniqueConstraint(name="unique_name", columns={"name"}),
 * @ORM\UniqueConstraint(name="unique_classRequirement", columns={"classRequirement"})})
 **/
class Character extends AbstractEntity {

    /**
     * @ORM\Column(type="string")
     * @var string
     **/
    protected $name;

    /**
     * @ORM\Column(type="string")
     * @Serializer\SerializedName("classRequirement")
     * @var string
     **/
    protected $classRequirement;

    /**
     * @ORM\OneToMany(targetEntity="SkillTree", mappedBy="character")
     * @ORM\OrderBy({"order" = "ASC"})
     * @Serializer\Exclude
     **/
    private $skillTrees;

    /**
     * Creates a new character class by initializing is properties by using the values given in the associative array.
     *
     * @param array $data associative array holding the properties for the character class.
     */
    public function __construct(array $data) {
        parent::__construct($data);
    }

    /**
     * @param string $classRequirement
     */
    public function setClassRequirement($classRequirement) {
        $this->classRequirement = $classRequirement;
    }

    /**
     * @return string
     */
    public function getClassRequirement() {
        return $this->classRequirement;
    }

    /**
     * @param string $name
     */
    public function setName($name) {
        $this->name = $name;
    }

    /**
     * @return string
     */
    public function getName() {
        return $this->name;
    }

    /**
     * @param mixed $skillTrees
     */
    public function setSkillTrees($skillTrees) {
        $this->skillTrees = $skillTrees;
    }

    /**
     * @return mixed
     */
    public function getSkillTrees() {
        return $this->skillTrees;
    }

    protected function doValidation() {
        parent::doValidation(); // TODO: Change the autogenerated stub
    }
}